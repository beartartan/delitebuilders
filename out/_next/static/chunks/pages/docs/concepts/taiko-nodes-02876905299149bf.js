(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7578],{7841:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/concepts/taiko-nodes",function(){return n(9618)}])},2851:function(e,t,n){"use strict";n.d(t,{Z:function(){return l}});var i=n(1527),r=n(5941),o=n.n(r),s=n(6607),d=n(959),a=n(7669),c=n(3283),l={banner:{key:"banner",text:(0,i.jsx)("a",{href:"/docs/guides",target:"_blank",children:"\uD83D\uDCCC Alpha-3 is here! Get started →"})},chat:{link:"https://discord.gg/delitesystems"},darkMode:!0,docsRepositoryBase:"https://github.com/delitesystems/delite-mono/blob/main/packages/website",editLink:{text:"Edit this page ↗"},feedback:{content:null},footer:{component:function(){return(0,i.jsx)("footer",{className:"bg-neutral-100 dark:bg-neutral-900",children:(0,i.jsxs)("div",{className:"mx-auto max-w-[90rem] pl-3",children:[(0,i.jsxs)("div",{className:"grid grid-cols-2 pl-[max(env(safe-area-inset-left),1.5rem)] pr-[max(env(safe-area-inset-right),1.5rem)] py-8 md:grid-cols-3",children:[(0,i.jsxs)("div",{children:[(0,i.jsx)("h2",{className:"font-grotesk mb-6 text-lg text-neutral-500 dark:text-neutral-300 pt-3",children:"About"}),(0,i.jsxs)("ul",{className:"text-neutral-500 dark:text-neutral-400",children:[(0,i.jsx)("li",{className:"mb-4",children:(0,i.jsx)("a",{href:"https://mirror.xyz/labs.delite.eth",className:"hover:underline",target:"_blank",children:"Blog"})}),(0,i.jsx)("li",{className:"mb-4",children:(0,i.jsx)("a",{href:"https://www.notion.so/delitesystems/Delite-Jobs-828fd7232d2c4150a11e10c8baa910a2",className:"hover:underline",target:"_blank",children:"Careers"})}),(0,i.jsx)("li",{className:"mb-4",children:(0,i.jsx)("a",{href:"https://github.com/delitesystems/delite-mono/tree/main/packages/branding/",className:"hover:underline",target:"_blank",children:"Media kit"})})]})]}),(0,i.jsxs)("div",{children:[(0,i.jsx)("h2",{className:"font-grotesk mb-6 text-lg text-neutral-500 dark:text-neutral-300 pt-3",children:"Developers"}),(0,i.jsxs)("ul",{className:"text-neutral-500 dark:text-neutral-400",children:[(0,i.jsx)("li",{className:"mb-4",children:(0,i.jsx)("a",{href:"/docs",className:"hover:underline",children:"Get started"})}),(0,i.jsx)("li",{className:"mb-4",children:(0,i.jsx)("a",{href:"https://github.com/delitesystems",className:"hover:underline",target:"_blank",children:"GitHub"})}),(0,i.jsx)("li",{className:"mb-4",children:(0,i.jsx)("a",{href:"https://delitesystems.github.io/delite-mono/delite-whitepaper.pdf",className:"hover:underline",target:"_blank",children:"Whitepaper"})})]})]}),(0,i.jsxs)("div",{children:[(0,i.jsx)("h2",{className:"font-grotesk mb-6 text-lg text-neutral-500 dark:text-neutral-300 pt-3",children:"Follow us"}),(0,i.jsxs)("ul",{className:"text-neutral-500 dark:text-neutral-400",children:[(0,i.jsx)("li",{className:"mb-4",children:(0,i.jsx)("a",{href:"https://discord.gg/delitesystems",className:"hover:underline",target:"_blank",children:"Discord"})}),(0,i.jsx)("li",{className:"mb-4",children:(0,i.jsx)("a",{href:"https://twitter.com/delitesystems",className:"hover:underline",target:"_blank",children:"Twitter"})}),(0,i.jsx)("li",{className:"mb-4",children:(0,i.jsx)("a",{href:"https://www.youtube.com/@delitesystems",className:"hover:underline",target:"_blank",children:"YouTube"})})]})]})]}),(0,i.jsxs)("div",{className:"font-groteskmedium text-md text-center text-neutral-500 dark:text-neutral-300 bg-neutral-100 dark:bg-neutral-900 px-4 py-6",children:["\xa9 ",new Date().getFullYear()," Delite Labs"]})]})})}},head:()=>{let{asPath:e}=(0,c.useRouter)(),{frontMatter:t}=(0,a.ZR)();return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("meta",{property:"og:url",content:"https://delite.xyz".concat(e)}),(0,i.jsx)("meta",{property:"og:title",content:t.title||"Delite"}),(0,i.jsx)("meta",{property:"og:description",content:t.description||"A decentralized, Ethereum-equivalent ZK-Rollup."}),(0,i.jsx)("meta",{property:"og:image",content:"/images/Delite_social_media_preview.png"}),(0,i.jsx)("link",{rel:"icon",href:"/images/favicon.svg"})]})},logo:(0,i.jsx)(function(){let{resolvedTheme:e}=(0,s.F)(),[t,n]=(0,d.useState)(null);return(0,d.useEffect)(()=>{n("dark"===e?"/images/logotype-white.png":"/images/logotype-black.png")},[e]),t?(0,i.jsx)(o(),{src:t,width:100,height:100,alt:"logo",style:{width:"100%",height:"auto"}}):null},{}),nextThemes:{defaultTheme:"light"},primaryHue:323,project:{link:"https://github.com/delitesystems"},useNextSeoProps:()=>({titleTemplate:"%s – Delite"})}},9618:function(e,t,n){"use strict";n.r(t);var i=n(1527),r=n(30),o=n(7669),s=n(2851);n(6114),n(7742);var d=n(6736),a=n(5941),c=n.n(a),l=n(6601);let h={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,d.ah)(),e.components);return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)},pageOpts:{filePath:"pages/docs/concepts/taiko-nodes.mdx",route:"/docs/concepts/taiko-nodes",headings:[{depth:2,value:"Overview",id:"overview"},{depth:2,value:"delite-geth",id:"delite-geth"},{depth:2,value:"delite-client",id:"delite-client"},{depth:3,value:"driver",id:"driver"},{depth:3,value:"proposer",id:"proposer"},{depth:3,value:"prover",id:"prover"},{depth:2,value:"Chain synchronization process",id:"chain-synchronization-process"},{depth:2,value:"Proposing process (in depth)",id:"proposing-process-in-depth"},{depth:2,value:"Proving process (in depth)",id:"proving-process-in-depth"}],pageMap:[{kind:"Meta",data:{index:{display:"hidden",title:"Delite",type:"page",theme:{layout:"raw"}},docs:{title:"Docs",type:"page"},bridge:{title:"Bridge",type:"page",href:"https://bridge.test.delite.xyz",newWindow:!0},swap:{title:"Swap",type:"page",display:"hidden",href:"https://swap.test.delite.xyz",newWindow:!0},explorers:{title:"Explorers",type:"menu",items:{status:{title:"Protocol Status",href:"https://status.test.delite.xyz",newWindow:!0},"l1-block-explorer":{title:"L1 Block Explorer",href:"https://sepolia.etherscan.io",newWindow:!0},"l2-block-explorer":{title:"L2 Block Explorer",href:"https://explorer.test.delite.xyz",newWindow:!0}}},ecosystem:{title:"Ecosystem",type:"page",theme:{layout:"full"}},blog:{title:"Blog",type:"page",href:"https://mirror.xyz/labs.delite.eth",newWindow:!0},forum:{title:"Forum",type:"page",href:"https://community.delite.xyz/",newWindow:!0},feedback:{title:"Feedback",type:"page",href:"https://forms.gle/9JWjWtjbWytZZcNRA",newWindow:!0}}},{kind:"Folder",name:"docs",route:"/docs",children:[{kind:"Meta",data:{index:{title:"Hello \uD83D\uDC4B"},guides:{title:"Guides"},reference:{title:"Reference"},concepts:{title:"Concepts"},resources:{title:"Resources"}}},{kind:"Folder",name:"concepts",route:"/docs/concepts",children:[{kind:"Meta",data:{overview:{title:"Overview"},proposing:{title:"Proposing Delite blocks"},proving:{title:"Proving Delite blocks"},bridging:{title:"Bridging"},"delite-nodes":{title:"Delite nodes"},"taiko-nodes":"Taiko Nodes"}},{kind:"MdxPage",name:"bridging",route:"/docs/concepts/bridging"},{kind:"MdxPage",name:"overview",route:"/docs/concepts/overview"},{kind:"MdxPage",name:"proposing",route:"/docs/concepts/proposing"},{kind:"MdxPage",name:"proving",route:"/docs/concepts/proving"},{kind:"MdxPage",name:"taiko-nodes",route:"/docs/concepts/taiko-nodes"}]},{kind:"Folder",name:"guides",route:"/docs/guides",children:[{kind:"Meta",data:{"configure-your-wallet":{title:"\uD83D\uDCBB Configure your wallet"},"receive-tokens":{title:"\uD83C\uDF88 Receive tokens"},"use-the-bridge":{title:"\uD83C\uDF09 Use the bridge"},"swap-tokens":{title:"\uD83D\uDD04 Swap tokens"},"run-a-node":{title:"\uD83C\uDF10 Run a node"},"enable-a-proposer":{title:"\uD83D\uDCE4 Enable a proposer"},"enable-a-prover":{title:"✅ Enable a prover"},"deploy-a-contract":{title:"\uD83D\uDE80 Deploy a contract"},"verify-a-contract":{title:"\uD83D\uDCDC Verify a contract"},"build-a-dapp":{title:"\uD83D\uDEE0️ Build a dapp"}}},{kind:"MdxPage",name:"build-a-dapp",route:"/docs/guides/build-a-dapp"},{kind:"MdxPage",name:"configure-your-wallet",route:"/docs/guides/configure-your-wallet"},{kind:"MdxPage",name:"deploy-a-contract",route:"/docs/guides/deploy-a-contract"},{kind:"MdxPage",name:"enable-a-proposer",route:"/docs/guides/enable-a-proposer"},{kind:"MdxPage",name:"enable-a-prover",route:"/docs/guides/enable-a-prover"},{kind:"MdxPage",name:"receive-tokens",route:"/docs/guides/receive-tokens"},{kind:"MdxPage",name:"run-a-node",route:"/docs/guides/run-a-node"},{kind:"MdxPage",name:"swap-tokens",route:"/docs/guides/swap-tokens"},{kind:"MdxPage",name:"use-the-bridge",route:"/docs/guides/use-the-bridge"},{kind:"MdxPage",name:"verify-a-contract",route:"/docs/guides/verify-a-contract"}]},{kind:"MdxPage",name:"guides",route:"/docs/guides"},{kind:"MdxPage",name:"index",route:"/docs"},{kind:"Folder",name:"reference",route:"/docs/reference",children:[{kind:"Meta",data:{"contract-documentation":{title:"Contract documentation"},"contract-addresses":{title:"Contract addresses"},"rpc-configuration":{title:"RPC configuration"}}},{kind:"MdxPage",name:"contract-addresses",route:"/docs/reference/contract-addresses"},{kind:"Folder",name:"contract-documentation",route:"/docs/reference/contract-documentation",children:[{kind:"Folder",name:"L1",route:"/docs/reference/contract-documentation/L1",children:[{kind:"MdxPage",name:"TaikoConfig",route:"/docs/reference/contract-documentation/L1/TaikoConfig",frontMatter:{title:"DeliteConfig"}},{kind:"MdxPage",name:"TaikoData",route:"/docs/reference/contract-documentation/L1/TaikoData",frontMatter:{title:"DeliteData"}},{kind:"MdxPage",name:"TaikoErrors",route:"/docs/reference/contract-documentation/L1/TaikoErrors",frontMatter:{title:"DeliteErrors"}},{kind:"MdxPage",name:"TaikoEvents",route:"/docs/reference/contract-documentation/L1/TaikoEvents",frontMatter:{title:"DeliteEvents"}},{kind:"MdxPage",name:"TaikoL1",route:"/docs/reference/contract-documentation/L1/TaikoL1",frontMatter:{title:"DeliteL1"}},{kind:"MdxPage",name:"TaikoToken",route:"/docs/reference/contract-documentation/L1/TaikoToken",frontMatter:{title:"LibDeliteTokenConfig"}},{kind:"Meta",data:{TaikoConfig:"DeliteConfig",TaikoData:"DeliteData",TaikoErrors:"DeliteErrors",TaikoEvents:"DeliteEvents",TaikoL1:"DeliteL1",TaikoToken:"LibDeliteTokenConfig"}}]},{kind:"Folder",name:"L2",route:"/docs/reference/contract-documentation/L2",children:[{kind:"MdxPage",name:"LibL2Consts",route:"/docs/reference/contract-documentation/L2/LibL2Consts",frontMatter:{title:"LibL2Consts"}},{kind:"MdxPage",name:"TaikoL2",route:"/docs/reference/contract-documentation/L2/TaikoL2",frontMatter:{title:"DeliteL2"}},{kind:"MdxPage",name:"TaikoL2Signer",route:"/docs/reference/contract-documentation/L2/TaikoL2Signer",frontMatter:{title:"DeliteL2Signer"}},{kind:"Meta",data:{TaikoL2:"DeliteL2",TaikoL2Signer:"DeliteL2Signer",LibL2Consts:"LibL2Consts"}}]},{kind:"Folder",name:"bridge",route:"/docs/reference/contract-documentation/bridge",children:[{kind:"MdxPage",name:"Bridge",route:"/docs/reference/contract-documentation/bridge/Bridge",frontMatter:{title:"Bridge"}},{kind:"MdxPage",name:"BridgeErrors",route:"/docs/reference/contract-documentation/bridge/BridgeErrors",frontMatter:{title:"BridgeErrors"}},{kind:"MdxPage",name:"BridgedERC20",route:"/docs/reference/contract-documentation/bridge/BridgedERC20",frontMatter:{title:"BridgedERC20"}},{kind:"MdxPage",name:"EtherVault",route:"/docs/reference/contract-documentation/bridge/EtherVault",frontMatter:{title:"EtherVault"}},{kind:"MdxPage",name:"IBridge",route:"/docs/reference/contract-documentation/bridge/IBridge",frontMatter:{title:"IBridge"}},{kind:"MdxPage",name:"TokenVault",route:"/docs/reference/contract-documentation/bridge/TokenVault",frontMatter:{title:"TokenVault"}},{kind:"Meta",data:{Bridge:"Bridge",BridgedERC20:"BridgedERC20",BridgeErrors:"BridgeErrors",EtherVault:"EtherVault",IBridge:"IBridge",TokenVault:"TokenVault"}}]},{kind:"Folder",name:"common",route:"/docs/reference/contract-documentation/common",children:[{kind:"MdxPage",name:"AddressManager",route:"/docs/reference/contract-documentation/common/AddressManager",frontMatter:{title:"IAddressManager"}},{kind:"MdxPage",name:"AddressResolver",route:"/docs/reference/contract-documentation/common/AddressResolver",frontMatter:{title:"AddressResolver"}},{kind:"MdxPage",name:"ICrossChainSync",route:"/docs/reference/contract-documentation/common/ICrossChainSync",frontMatter:{title:"ICrossChainSync"}},{kind:"MdxPage",name:"IMintableERC20",route:"/docs/reference/contract-documentation/common/IMintableERC20",frontMatter:{title:"IMintableERC20"}},{kind:"MdxPage",name:"Proxied",route:"/docs/reference/contract-documentation/common/Proxied",frontMatter:{title:"Proxied"}},{kind:"Meta",data:{AddressResolver:"AddressResolver",AddressManager:"IAddressManager",ICrossChainSync:"ICrossChainSync",IMintableERC20:"IMintableERC20",Proxied:"Proxied"}}]},{kind:"Folder",name:"gov",route:"/docs/reference/contract-documentation/gov",children:[{kind:"MdxPage",name:"TaikoGovernor",route:"/docs/reference/contract-documentation/gov/TaikoGovernor",frontMatter:{title:"DeliteGovernor"}},{kind:"Meta",data:{TaikoGovernor:"DeliteGovernor"}}]},{kind:"Folder",name:"signal",route:"/docs/reference/contract-documentation/signal",children:[{kind:"MdxPage",name:"ISignalService",route:"/docs/reference/contract-documentation/signal/ISignalService",frontMatter:{title:"ISignalService"}},{kind:"MdxPage",name:"SignalService",route:"/docs/reference/contract-documentation/signal/SignalService",frontMatter:{title:"SignalService"}},{kind:"Meta",data:{ISignalService:"ISignalService",SignalService:"SignalService"}}]}]},{kind:"MdxPage",name:"rpc-configuration",route:"/docs/reference/rpc-configuration"}]},{kind:"Folder",name:"resources",route:"/docs/resources",children:[{kind:"Meta",data:{contributing:{title:"Contributing"},"official-links":{title:"Official links"},talks:{title:"Talks"},"rollup-glossary":{title:"Rollup glossary"},whitepaper:{title:"Whitepaper"}}},{kind:"MdxPage",name:"contributing",route:"/docs/resources/contributing"},{kind:"MdxPage",name:"official-links",route:"/docs/resources/official-links"},{kind:"MdxPage",name:"rollup-glossary",route:"/docs/resources/rollup-glossary"},{kind:"MdxPage",name:"talks",route:"/docs/resources/talks"},{kind:"MdxPage",name:"whitepaper",route:"/docs/resources/whitepaper"}]}]},{kind:"MdxPage",name:"ecosystem",route:"/ecosystem"},{kind:"MdxPage",name:"index",route:"/",frontMatter:{title:"Home"}}],flexsearch:{codeblocks:!0},title:"Taiko Nodes"},pageNextRoute:"/docs/concepts/taiko-nodes",nextraLayout:o.ZP,themeConfig:s.Z};function p(e){let t=Object.assign({h2:"h2",p:"p",a:"a",ul:"ul",li:"li",code:"code",h3:"h3",ol:"ol",strong:"strong"},(0,d.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(t.p,{children:["Delite nodes are minimally modified Ethereum ",(0,i.jsx)(t.a,{href:"https://ethereum.org/en/glossary/#execution-client",children:"execution clients"})," that consist of two parts:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/delitesystems/delite-geth",children:"delite-geth"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/delitesystems/delite-client",children:"delite-client"})}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["You can think of it like an Ethereum mainnet node, except replacing the consensus client with ",(0,i.jsx)(t.code,{children:"delite-client"}),". ",(0,i.jsx)(t.code,{children:"delite-client"})," then drives ",(0,i.jsx)(t.code,{children:"delite-geth"})," over the ",(0,i.jsx)(t.a,{href:"https://github.com/ethereum/execution-apis/tree/main/src/engine",children:"Engine API"}),". This is a modular design that allows easily plugging in other execution clients."]}),"\n",(0,i.jsx)("center",{children:(0,i.jsx)(c(),{src:"/images/diagrams/concepts/delite-nodes/delite-nodes.png",alt:"delite nodes diagram",width:400,height:400})}),"\n",(0,i.jsx)(t.h2,{id:"delite-geth",children:"delite-geth"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.a,{href:"https://github.com/delitesystems/delite-geth",children:"delite-geth"})," software is a fork of ",(0,i.jsx)(t.a,{href:"https://github.com/ethereum/go-ethereum",children:"go-ethereum"})," with some changes made according to the Delite protocol."]}),"\n",(0,i.jsxs)(t.p,{children:["Like Ethereum mainnet execution engines, ",(0,i.jsx)(t.code,{children:"delite-geth"})," listens to new L2 transactions broadcasted in the L2 network, executes them in the EVM, and holds the latest state and database of all current L2 data."]}),"\n",(0,i.jsxs)(t.p,{children:["You can see all the changes made in the the ",(0,i.jsx)(t.code,{children:"delite-geth"})," fork at ",(0,i.jsx)(t.a,{href:"https://geth.delite.xyz",children:"geth.delite.xyz"}),"!"]}),"\n",(0,i.jsx)(t.h2,{id:"delite-client",children:"delite-client"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.a,{href:"https://github.com/delitesystems/delite-client",children:"delite-client"})," software replaces the consensus client piece of an Ethereum mainnet node. It connects to ",(0,i.jsx)(t.code,{children:"delite-geth"}),", and the compiled binary includes three sub-commands:"]}),"\n",(0,i.jsx)(t.h3,{id:"driver",children:(0,i.jsx)(t.code,{children:"driver"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"driver"})," serves as an L2 consensus client. It listens for new L2 blocks from the ",(0,i.jsx)(t.code,{children:"DeliteL1"})," protocol contract, then directs the connected L2 execution engine to insert them or reorganize its local chain through the Engine API."]}),"\n",(0,i.jsx)(t.h3,{id:"proposer",children:(0,i.jsx)(t.code,{children:"proposer"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"proposer"})," fetches pending transactions from the L2 execution engine's mempool intervally pool, then tries to propose them to the ",(0,i.jsx)(t.code,{children:"DeliteL1"})," protocol contract."]}),"\n",(0,i.jsx)(t.h3,{id:"prover",children:(0,i.jsx)(t.code,{children:"prover"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"prover"})," requests validity proofs from the ZK-EVM and sends transactions to prove the proposed blocks are valid or invalid."]}),"\n",(0,i.jsx)(t.h2,{id:"chain-synchronization-process",children:"Chain synchronization process"}),"\n",(0,i.jsx)(l.UW,{type:"info",emoji:"ℹ️",children:(0,i.jsxs)(t.p,{children:["The Delite protocol allows a block's timestamp to be equal to its parent block's timestamp, which differs from the original Ethereum protocol. So it's fine that there are two ",(0,i.jsx)(t.code,{children:"DeliteL1.proposeBlock"})," transactions included in one L1 block."]})}),"\n",(0,i.jsx)(t.p,{children:"Delite client's driver informs the L2 execution engine about Delite protocol contract's latest verified L2 head and tries to let it catch up with the latest verified L2 block through P2P at first."}),"\n",(0,i.jsx)(t.p,{children:"The driver monitors the execution engine's sync progress: If it's unable to make any new sync progress in a period of time, the driver switches to inserting the verified blocks into its local chain through the Engine API one by one."}),"\n",(0,i.jsxs)(t.p,{children:["After the L2 execution engine catches up with the latest verified L2 head, the driver subscribes to ",(0,i.jsx)(t.code,{children:"DeliteL1.BlockProposed"})," events. When a new pending block is proposed, the driver:"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Gets the corresponding ",(0,i.jsx)(t.code,{children:"DeliteL1.proposeBlock"})," L1 transaction."]}),"\n",(0,i.jsxs)(t.li,{children:["Decodes the ",(0,i.jsx)(t.code,{children:"txList"})," and block metadata from the transaction's calldata."]}),"\n",(0,i.jsxs)(t.li,{children:["Checks whether the ",(0,i.jsx)(t.code,{children:"txList"})," is valid based on the rules defined in the Delite protocol."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["If the ",(0,i.jsx)(t.code,{children:"txList"})," is ",(0,i.jsx)(t.strong,{children:"valid"}),", the driver:"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Assembles a deterministic ",(0,i.jsx)(t.code,{children:"DeliteL2.anchor"})," transaction based on the rules defined in the protocol and puts it as the first transaction in the proposed ",(0,i.jsx)(t.code,{children:"txList"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Uses this ",(0,i.jsx)(t.code,{children:"txList"})," and the decoded block metadata to assemble a deterministic L2 block."]}),"\n",(0,i.jsx)(t.li,{children:"Directs the L2 execution engine to insert this assembled block and sets it as the current canonical chain's head via the Engine API."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["If the ",(0,i.jsx)(t.code,{children:"txList"})," is ",(0,i.jsx)(t.strong,{children:"invalid"}),", the driver:"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Assembles an empty L2 block with only the anchor transaction."}),"\n"]}),"\n",(0,i.jsxs)(l.UW,{type:"info",emoji:"ℹ️",children:[(0,i.jsxs)(t.p,{children:["Read more about block metadata ",(0,i.jsx)(t.a,{href:"https://delite.xyz/docs/concepts/creating-delite-blocks/intrinsic-validity-functions",children:"here"})," or see ",(0,i.jsx)(t.code,{children:"5.2.2 Block Metadata"})," in the ",(0,i.jsx)(t.a,{href:"https://delitesystems.github.io/delite-mono/delite-whitepaper.pdf",children:"whitepaper"}),"."]}),(0,i.jsxs)(t.p,{children:["Read more about ",(0,i.jsx)(t.code,{children:"txList"})," validation rules ",(0,i.jsx)(t.a,{href:"https://delite.xyz/docs/concepts/creating-delite-blocks/intrinsic-validity-functions",children:"here"})," or see ",(0,i.jsx)(t.code,{children:"5.3.1 Validation"})," in the ",(0,i.jsx)(t.a,{href:"https://delitesystems.github.io/delite-mono/delite-whitepaper.pdf",children:"whitepaper"}),"."]}),(0,i.jsxs)(t.p,{children:["Read more about the ",(0,i.jsx)(t.code,{children:"DeliteL2.anchor"})," transaction and proposed block's determination ",(0,i.jsx)(t.a,{href:"https://delite.xyz/docs/concepts/creating-delite-blocks/anchor-transaction",children:"here"})," or see ",(0,i.jsx)(t.code,{children:"5.4.1 Construction of Anchor Transactions"})," in the ",(0,i.jsx)(t.a,{href:"https://delitesystems.github.io/delite-mono/delite-whitepaper.pdf",children:"whitepaper"}),"."]})]}),"\n",(0,i.jsx)(t.h2,{id:"proposing-process-in-depth",children:"Proposing process (in depth)"}),"\n",(0,i.jsxs)(t.p,{children:["To propose a block, the ",(0,i.jsx)(t.code,{children:"proposer"}),":"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Fetches the pending transactions from the L2 execution engine through the ",(0,i.jsx)(t.code,{children:"txpool_content"})," RPC method."]}),"\n",(0,i.jsxs)(t.li,{children:["If there are too many pending transactions in the L2 execution engine, splits them into several smaller ",(0,i.jsx)(t.code,{children:"txLists"}),". This is because the Delite protocol restricts the max size of each proposed ",(0,i.jsx)(t.code,{children:"txList"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Proposes all splitted ",(0,i.jsx)(t.code,{children:"txLists"})," by sending ",(0,i.jsx)(t.code,{children:"DeliteL1.proposeBlock"})," transactions."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"proving-process-in-depth",children:"Proving process (in depth)"}),"\n",(0,i.jsxs)(t.p,{children:["When a new block is proposed, the ",(0,i.jsx)(t.code,{children:"prover"}),":"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Gets the ",(0,i.jsx)(t.code,{children:"DeliteL1.proposeBlock"})," L1 transaction calldata, decodes it, and validates the ",(0,i.jsx)(t.code,{children:"txList"}),", just like what the ",(0,i.jsx)(t.code,{children:"driver"})," software does."]}),"\n",(0,i.jsxs)(t.li,{children:["Waits until the corresponding block is inserted by the L2 execution engine's ",(0,i.jsx)(t.code,{children:"driver"})," software."]}),"\n",(0,i.jsx)(t.li,{children:"Generates a validity proof for that block asynchronously."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["If the proposed block has a ",(0,i.jsx)(t.strong,{children:"valid"})," or ",(0,i.jsx)(t.strong,{children:"invalid"})," ",(0,i.jsx)(t.code,{children:"txList"}),", the ",(0,i.jsx)(t.code,{children:"prover"}),":"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Generates a Merkle proof of the block's ",(0,i.jsx)(t.code,{children:"DeliteL2.anchor"})," transaction to prove its existence in the ",(0,i.jsx)(t.code,{children:"block.txRoot"}),"'s ",(0,i.jsx)(t.a,{href:"https://ethereum.org/en/developers/docs/data-structures-and-encoding/patricia-merkle-trie/",children:"MPT"})," and this transaction receipt's ",(0,i.jsx)(t.a,{href:"https://rollup-glossary.vercel.app/other-terms#merkle-proofs",children:"Merkle proof"})," in the ",(0,i.jsx)(t.code,{children:"block.receiptRoot"}),"'s MPT from the L2 execution engine."]}),"\n",(0,i.jsxs)(t.li,{children:["Submits the ",(0,i.jsx)(t.code,{children:"DeliteL2.anchor"})," transaction's RLP encoded bytes, its receipt's RLP encoded bytes, the generated Merkle proofs, and a validity proof to prove this block ",(0,i.jsx)(t.strong,{children:"valid"})," by sending a ",(0,i.jsx)(t.code,{children:"DeliteL1.proveBlock"})," transaction (the block is valid even for an invalid ",(0,i.jsx)(t.code,{children:"txList"})," because we prove the invalid ",(0,i.jsx)(t.code,{children:"txList"})," maps to an empty block with only the anchor transaction)."]}),"\n"]}),"\n",(0,i.jsx)(l.UW,{type:"info",emoji:"ℹ️",children:(0,i.jsxs)(t.p,{children:["Read more about why we need these Merkle proofs when proving in ",(0,i.jsx)(t.code,{children:"5.5 Proving Blocks"})," in the ",(0,i.jsx)(t.a,{href:"https://delitesystems.github.io/delite-mono/delite-whitepaper.pdf",children:"whitepaper"}),"."]})})]})}t.default=(0,r.j)(h)}},function(e){e.O(0,[4735,9774,2888,179],function(){return e(e.s=7841)}),_N_E=e.O()}]);